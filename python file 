{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNIUpNbSC71CZdbLZ/VESym",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Ashish11828/polynomial-regression/blob/main/python%20file%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "16llsAyXOBJV",
        "outputId": "0db102ec-67ae-449e-ca0b-23021ead6ad5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5.53\n"
          ]
        }
      ],
      "source": [
        "import sys\n",
        "import numpy as np\n",
        "from sklearn.preprocessing import PolynomialFeatures\n",
        "from sklearn.linear_model import LinearRegression\n",
        "import io\n",
        "\n",
        "# Read all input\n",
        "# Replace sys.stdin with a string containing the input data\n",
        "input_data = \"\"\"2 2\n",
        "1 0.1 2\n",
        "2 0.2 3\n",
        "1\n",
        "3 0.3\n",
        "\"\"\"\n",
        "\n",
        "# Read data from the string\n",
        "data = io.StringIO(input_data).read().splitlines()\n",
        "\n",
        "# Read F (features) and N (training samples)\n",
        "F, N = map(int, data[0].split())\n",
        "\n",
        "\n",
        "# Parse the training data\n",
        "X_train = []\n",
        "y_train = []\n",
        "for i in range(1, N + 1):\n",
        "    *features, target = map(float, data[i].split())\n",
        "    X_train.append(features)\n",
        "    y_train.append(target)\n",
        "\n",
        "X_train = np.array(X_train)\n",
        "y_train = np.array(y_train)\n",
        "\n",
        "# Read number of test cases\n",
        "T = int(data[N + 1])\n",
        "\n",
        "# Parse test features\n",
        "X_test = []\n",
        "for i in range(N + 2, N + 2 + T):\n",
        "    features = list(map(float, data[i].split()))\n",
        "    X_test.append(features)\n",
        "\n",
        "X_test = np.array(X_test)\n",
        "\n",
        "# Polynomial Regression with degree < 4\n",
        "poly = PolynomialFeatures(degree=3)\n",
        "X_poly = poly.fit_transform(X_train)\n",
        "X_test_poly = poly.transform(X_test)\n",
        "\n",
        "# Train Linear Regression\n",
        "model = LinearRegression()\n",
        "model.fit(X_poly, y_train)\n",
        "\n",
        "# Predict\n",
        "predictions = model.predict(X_test_poly)\n",
        "\n",
        "# Output with 2 decimal places\n",
        "for value in predictions:\n",
        "    print(f\"{value:.2f}\")"
      ]
    }
  ]
}